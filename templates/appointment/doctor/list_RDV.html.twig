{% extends 'home/base.html.twig' %}

{% block body %}
<div class="container appointment-list" style="margin-top: 220px; margin-bottom: 500px;">
    <h1 class="mb-4 text-center">
        <i class="fas fa-calendar-alt" style="color:rgb(124, 142, 232);"></i> Mes Rendez-vous
    </h1>

    <!-- Bouton de tri en dehors du tableau -->
    <div class="mb-3 text-end">
        <button id="sort-date" class="btn btn-custom-infoo">
            Trier par date <i class="fas fa-sort"></i>
        </button>
        
    </div>

    <table class="table table-striped table-hover shadow-sm">
        <thead class="table-dark">
            <tr>
                <th>Nom du patient</th>
                <th>Date</th>
                <th>Type</th>
                <th>statut</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
        {% for appointment in appointments %}
            <tr>
                <td>{{ appointment.patient ? appointment.patient.nom ~ ' ' ~ appointment.patient.prenom : '' }}</td>
                <td>{{ appointment.date ? appointment.date|date('Y-m-d') : '' }}</td>
                <td>{{ appointment.type ? appointment.type.value : 'Non spécifié' }}</td>
             <td>
    <div class="status-badge 
        {% if appointment.statut == 'pending' %} status-pending
        {% elseif appointment.statut == 'accepted' %} status-accepted
        {% elseif appointment.statut == 'rejected' %} status-rejected
        {% endif %}">
        {{ appointment.statut.label() }}
    </div>
</td>
                <td>
                    <div style="display: flex; gap: 10px;">
                        <!-- Bouton Accepter -->
                        <form action="{{ path('app_appointment_accept', {'id': appointment.id}) }}" method="POST">
                            <button type="submit" class="btn btn-custom-info btn-sm">Accepter</button>
                        </form>

                        <!-- Bouton Supprimer -->
                        <form action="{{ path('app_appointment_reject', {'id': appointment.id}) }}" method="POST" onsubmit="return confirm('Êtes-vous sûr de vouloir refuser ce rendez-vous ?');">
                            <input type="hidden" name="_token" value="{{ csrf_token('reject' ~ appointment.id) }}">
                            <button type="submit" class="btn btn-danger btn-sm">Refuser</button>
                        </form>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="4" class="text-center">Aucun rendez-vous trouvé</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
</div>

<script>
    // Tri par date (existant)
    document.getElementById('sort-date').addEventListener('click', function() {
        const table = document.querySelector('table');
        const tbody = table.querySelector('tbody');
        const rows = Array.from(tbody.querySelectorAll('tr'));

        // Trier les lignes en fonction de la date
        rows.sort((a, b) => {
            const dateA = new Date(a.cells[1].textContent.trim());
            const dateB = new Date(b.cells[1].textContent.trim());
            return dateA - dateB; // Tri ascendant
        });

        // Inverser l'ordre si la colonne est déjà triée
        if (this.classList.contains('sorted-asc')) {
            rows.reverse();
            this.classList.remove('sorted-asc');
            this.classList.add('sorted-desc');
        } else {
            this.classList.remove('sorted-desc');
            this.classList.add('sorted-asc');
        }

        // Réinsérer les lignes triées dans le tableau
        tbody.innerHTML = ''; // Vider le tbody avant de réinsérer les lignes triées
        rows.forEach(row => tbody.appendChild(row));
    });
</script>

<style>
    .fa-sort {
        margin-left: 5px;
    }
    .sorted-asc .fa-sort::before {
        content: "\f0de"; /* Icône de tri ascendant */
    }
    .sorted-desc .fa-sort::before {
        content: "\f0dd"; /* Icône de tri descendant */
    }
    .btn-custom-info {
        background-color: #17a2b8;
        color: #fff;
        border: none;
        border-radius: 25px;
        padding: 8px 16px;
        font-weight: 600;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }
    .btn-custom-infoo{
        background-color:rgba(8, 57, 232, 0.56);
        color: #fff;
        border: none;
        border-radius: 25px;
        padding: 8px 16px;
        font-weight: 600;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }
    .btn-custom-info:hover {
        background-color: #138496;
        transform: translateY(-2px);
        box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
    }

    .appointment-list {
        max-width: 900px;
        margin: 0 auto;
        padding: 20px;
    }

    .btn-custom-success,
    .btn-custom-info,
    .btn-danger,
    .btn-custom-warning {
        min-width: 120px;
        height: 40px; /* Taille réduite */
        border: none;
        border-radius: 25px;
        padding: 8px 16px; /* Taille réduite */
        font-weight: 600;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        text-align: center;
        display: inline-block;
        width: auto;
    }

    .btn-custom-success {
        background-color: rgb(63, 158, 79);
        color: #fff;
    }

    .btn-custom-success:hover {
        background-color: rgb(50, 140, 65);
        transform: translateY(-2px);
        box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
    }

    .btn-custom-info {
        background-color: #17a2b8;
        color: #fff;
    }

    .btn-custom-info:hover {
        background-color: #138496;
        transform: translateY(-2px);
        box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
    }
       .btn-danger:hover {
        background-color: #c82333;
        transform: translateY(-2px);
        box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
    }
    .btn-custom-warning {
        background-color: #ffc107;
        color: #000;
    }

    .btn-custom-warning:hover {
        background-color: #e0a800;
        transform: translateY(-2px);
        box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
    }

    .table {
        border-radius: 10px;
        overflow: hidden;
    }

    .table thead th {
        background-color: #343a40;
        color: #fff;
        font-weight: 600;
    }

    .table tbody tr:hover {
        background-color: #f8f9fa;
    }



    .btn-sm {
        padding: 0.25rem 0.5rem; /* Taille réduite pour les boutons "Voir" et "Modifier" */
        font-size: 0.875rem; /* Taille de police réduite */
        border-radius: 20px; /* Bordures arrondies */
    }
   background-color: #dc3545 !important; /* Rouge */
}


    .btn-custom-warning {
        background-color: #ffc107; /* Jaune pour "En attente" */
        color: #000;
    }

    .btn-custom-success {
        background-color: #28a745; /* Vert pour "Confirmé" */
        color: #fff;
    }

    .btn-custom-danger {
        background-color: #dc3545; /* Rouge pour "Refusé" */
        color: #fff;
    }

    .btn-filter {
        margin-left: 10px; /* Espacement entre les boutons */
    }

/* Classe de base pour le badge de statut */
.status-badge {
    display: inline-block;
    padding: 0.5em 0.75em;
    font-size: 0.875em;
    font-weight: 600;
    border-radius: 10px;
    text-align: center;
    color: #000; /* Texte noir par défaut */
}

/* Statut "En attente" */
.status-badge-pending {
    background-color: #ffc107; /* Jaune */
    border: 1px solid #e0a800; /* Bordure plus foncée */
    color: #000; /* Texte noir pour une meilleure lisibilité sur fond jaune */
}

/* Statut "Accepté" */
.status-badge-accepted {
    background-color: #28a745; /* Vert */
    border: 1px solid #218838; /* Bordure plus foncée */
    color: #fff; /* Texte blanc pour une meilleure lisibilité sur fond vert */
}

/* Statut "Refusé" */
.status-badge-rejected {
    background-color: #dc3545; /* Rouge */
    border: 1px solid #c82333; /* Bordure plus foncée */
    color: #fff; /* Texte blanc pour une meilleure lisibilité sur fond rouge */
}
</style>


{% endblock %}